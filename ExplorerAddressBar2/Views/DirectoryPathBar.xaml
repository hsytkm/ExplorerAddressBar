<UserControl x:Class="ExplorerAddressBar2.Views.DirectoryPathBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:r="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.NET46"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:vc="clr-namespace:ExplorerAddressBar2.Views.Converters"
             xmlns:vme="clr-namespace:ExplorerAddressBar2.ViewModels.EventConverters"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <vc:InverseBooleanToVisibilityConverter x:Key="InvBoolToVisibilityConverter"/>
    </UserControl.Resources>

    <!-- ItemsControl攻略 ～ 外観のカスタマイズ http://grabacr.net/archives/1240 -->
    <!-- Standard Controls - ItemsControl http://yujiro15.net/YKSoftware/StandardControls_ItemsControl.html -->

    <!-- MainWindowが小さくなっても本来のサイズを取得するためScrollViewerで包む -->
    <ScrollViewer IsTabStop="False" 
                  VerticalScrollBarVisibility="Hidden"
                  HorizontalScrollBarVisibility="Hidden" >

        <!-- ItemsControlの不使用領域を含ませないためGridで包む -->
        <Grid Background="SkyBlue" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ItemsControl x:Name="NodeItemsControl"
                          prism:RegionManager.RegionName="DirectoryPathNodeRegion"
                          Height="20"
                          Background="Pink"
                          Visibility="{Binding IsVisibleTextBoxPath.Value, Mode=OneWay,
                                               Converter={StaticResource InvBoolToVisibilityConverter}}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <Border Grid.Column="1"
                    Background="Yellow"
                    Visibility="{Binding Visibility, ElementName=NodeItemsControl}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <r:EventToReactiveProperty ReactiveProperty="{Binding VisibleTextBoxPathCommand, Mode=OneTime}"
                                                   IgnoreEventArgs="true" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>

            <TextBox Grid.ColumnSpan="2"
                     Text="{Binding TargetDirectoryPath, Mode=OneWay}"
                     Visibility="{Binding IsVisibleTextBoxPath.Value, Mode=OneWay,
                                          Converter={StaticResource BooleanToVisibilityConverter}}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyDown" >
                        <r:EventToReactiveProperty ReactiveProperty="{Binding SetTextBoxPathCommand, Mode=OneTime}" >
                            <vme:EnterKeyDownEventToTextBoxStringConverter />
                        </r:EventToReactiveProperty>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

        </Grid>
    </ScrollViewer>
    
</UserControl>
